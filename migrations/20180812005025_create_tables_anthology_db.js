
exports.up = function(knex, Promise) {

    return createAuthorsTable()
      .then(createPublicationsTable)
      .then(createAuthorServicesTable)
      .then(addForeignKeyPublications)
      .then(addForeignKeyAuthorServices)



    function createAuthorsTable() {
      return knex.raw('CREATE TABLE authors (author_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, author_name TEXT NOT NULL, author_bio TEXT, author_photo BYTEA, author_video_link TEXT, author_website_url TEXT)');
    }

     function createPublicationsTable() {
       return knex.raw('CREATE TABLE publications (publication_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL, publication_author_id integer NOT NULL UNIQUE, publication_name TEXT NOT NULL, publication_Date DATE, publisher TEXT)');
    }

     function createAuthorServicesTable() {
       return knex.raw('CREATE TABLE author_services (service_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL, service_author_id integer NOT NULL UNIQUE, service_name TEXT NOT NULL, service_contact_email TEXT, service_contact_phone TEXT)');
    }

     function addForeignKeyPublications(){
       return knex.raw('ALTER TABLE publications ADD CONSTRAINT publications_fk0 FOREIGN KEY (publication_author_id) REFERENCES authors(author_id)');
    }
     function addForeignKeyAuthorServices() {
       return knex.raw('ALTER TABLE author_services ADD CONSTRAINT author_services_fk0 FOREIGN KEY (service_author_id) REFERENCES authors(author_id)');
     }
};


exports.down = function(knex, Promise) {
    return dropAuthorServicesTable()
    .then(dropPublicationsTable)
    .then(dropAuthorsTable)

  function dropAuthorsTable() {
    return knex.schema.dropTable('authors');
  }

  function dropPublicationsTable() {
    return knex.schema.dropTable('publications');
  }

  function dropAuthorServicesTable() {
    return knex.schema.dropTable('author_services');
  }

};
